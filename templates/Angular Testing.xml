<templateSet group="Angular Testing">
  <template name="tbm" value="TestBed.configureTestingModule({&#10;  $MODULE$&#10;});$END$" description="TestBed.configureTestingModule" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="proval" value="provide: $TOKEN$,&#10;useValue: $VALUE$,$END$" description="Provider useValue" toReformat="false" toShortenFQNames="true">
    <variable name="TOKEN" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="cso" value="jasmine.createSpyObj&lt;$TYPE$&gt;(['$METHOD$'])$END$" description="createSpyObj" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tbg" value="TestBed.get($TOKEN$);$END$" description="TestBed.get" toReformat="false" toShortenFQNames="true">
    <variable name="TOKEN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="jso" value="jasmine.SpyObj&lt;$TYPE$&gt;$END$" description="jasmine.SpyObj" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ctm" value="TestBed.configureTestingModule({&#10;  providers: [$END$]&#10;});" description="TestBed.configureTestingModule" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tbi" value="TestBed.inject($TOKEN$);$END$" description="TestBed.inject" toReformat="false" toShortenFQNames="true">
    <variable name="TOKEN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tbis" value="TestBed.inject($TOKEN$) as jasmine.SpyObj&lt;$TOKEN$&gt;;$END$" description="TestBed.inject as spy" toReformat="false" toShortenFQNames="true">
    <variable name="TOKEN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tbims" value="TestBed.inject(MockStore) as MockStore&lt;$PARTIAL_STATE$&gt;;$END$" description="TestBed.inject Mock Store" toReformat="false" toShortenFQNames="true">
    <variable name="PARTIAL_STATE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>